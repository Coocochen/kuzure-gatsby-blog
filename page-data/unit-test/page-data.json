{
    "componentChunkName": "component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js",
    "path": "/unit-test/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Kuzure's blog","social":[{"name":"twitter","url":"https://twitter.com/gatsbyjs"},{"name":"github","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"id":"5a40241e-293c-59ee-80ab-17a28f628879","excerpt":"TDD(测试驱动开发) 和 BDD(行为驱动开发) 关于 TDD 和 BDD 网上有各种不同的说法，个人理解的 TDD…","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"jest单元测试、TDD、BDD\",\n  \"date\": \"2021-06-24T00:00:00.000Z\",\n  \"image\": \"./image.jpg\",\n  \"imageAlt\": \"Laptop on a desk with VS Code open.\",\n  \"tags\": [\"前端\", \"单元测试\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"tdd测试驱动开发-和-bdd行为驱动开发\"\n  }, \"TDD(\\u6D4B\\u8BD5\\u9A71\\u52A8\\u5F00\\u53D1) \\u548C BDD(\\u884C\\u4E3A\\u9A71\\u52A8\\u5F00\\u53D1)\"), mdx(\"p\", null, \"\\u5173\\u4E8E TDD \\u548C BDD \\u7F51\\u4E0A\\u6709\\u5404\\u79CD\\u4E0D\\u540C\\u7684\\u8BF4\\u6CD5\\uFF0C\\u4E2A\\u4EBA\\u7406\\u89E3\\u7684 TDD\\uFF0C\\u5C31\\u662F\\u9996\\u5148\\u660E\\u786E\\u81EA\\u5DF1\\u60F3\\u8981\\u5199\\u4EC0\\u4E48\\u4EE3\\u7801\\uFF0C\\u5C3D\\u91CF\\u4ECE\\u6700\\u7B80\\u5355\\u7684\\u5F00\\u59CB\\uFF0C\\u5199\\u4E00\\u4E2A\\u6D4B\\u8BD5\\uFF0C\\u518D\\u53BB\\u5177\\u4F53\\u5730\\u5B9E\\u73B0\\u8FD9\\u5C0F\\u6BB5\\u4EE3\\u7801\\uFF0C\\u4EE5\\u8FBE\\u5230\\u8FD9\\u4E2A\\u6D4B\\u8BD5\\u901A\\u8FC7\\u7684\\u6548\\u679C\\uFF0C\\u4E4B\\u540E\\u518D\\u7EE7\\u7EED\\u5199\\u6D4B\\u8BD5\\u3001\\u5B9E\\u73B0\\u3001\\u6D4B\\u8BD5\\u901A\\u8FC7\\uFF0C\\u8FD9\\u6837\\u4E0D\\u505C\\u5FAA\\u73AF\\u91CD\\u6784\\u3002\"), mdx(\"p\", null, \"\\u4F8B\\u5982\\u5199\\u4E00\\u4E2A\\u51FD\\u6570\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u9996\\u5148\\u5199\\u51FD\\u6570\\u7684\\u8C03\\u7528\\u7684\\u6D4B\\u8BD5\\uFF0C\\u7136\\u540E\\u5B9E\\u73B0\\u4EE3\\u7801\\u5E76\\u6D4B\\u8BD5\\u6210\\u529F\\u540E\\uFF0C\\u518D\\u6D4B\\u8BD5\\u51FD\\u6570\\u7684\\u8FD4\\u56DE\\u503C\\uFF0C\\u518D\\u7EE7\\u7EED\\u5B9E\\u73B0\\u51FD\\u6570\\u2026\"), mdx(\"p\", null, \"TDD \\u7684\\u597D\\u5904\\u5C31\\u662F\\u4F1A\\u51CF\\u5C11\\u7A0B\\u5E8F\\u903B\\u8F91\\u7684\\u9519\\u8BEF\\uFF0C\\u5C3D\\u53EF\\u80FD\\u5730\\u51CF\\u5C11 bug\\u3002\\u800C\\u7F3A\\u70B9\\u5C31\\u662F\\u5982\\u679C\\u66F4\\u6539\\u4E86\\u4EE3\\u7801\\u7684\\u5B9E\\u73B0\\u903B\\u8F91\\uFF0C\\u5C31\\u9700\\u8981\\u4FEE\\u6539\\u6D4B\\u8BD5\\uFF0C\\u53EF\\u80FD\\u4F1A\\u4F7F\\u5F97\\u6D4B\\u8BD5\\u4EE3\\u7801\\u96BE\\u4EE5\\u7EF4\\u62A4\\u3002\"), mdx(\"p\", null, \"BDD \\u662F TDD \\u7684\\u4E00\\u79CD\\u8865\\u5145\\uFF0C\\u5728 TDD \\u7684\\u57FA\\u7840\\u4E0A\\uFF0C\\u91C7\\u7528\\u4E86\\u66F4\\u8BE6\\u7EC6\\u7684\\u529F\\u80FD\\u63CF\\u8FF0\\uFF0C\\u901A\\u8FC7\\u8003\\u8651\\u7528\\u6237\\u7684\\u884C\\u4E3A\\u3001\\u7EC4\\u4EF6\\u7684\\u529F\\u80FD\\uFF0C\\u6765\\u7F16\\u5199\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u8003\\u8651\\u5230\\u9879\\u76EE\\u7684\\u590D\\u6742\\u5EA6\\u548C\\u4F9D\\u8D56\\u6027\\uFF0CTDD \\u9700\\u8981\\u7B80\\u5355\\u548C\\u6613\\u4E8E\\u6D4B\\u8BD5\\u7684\\u4EE3\\u7801\\uFF0C\\u5426\\u5219\\u9700\\u8981\\u5F00\\u53D1\\u4EBA\\u5458\\u82B1\\u8F83\\u591A\\u7684\\u65F6\\u95F4\\u8FDB\\u884C\\u4E00\\u4E9B\\u6865\\u63A5\\u7684\\u5DE5\\u4F5C\\u3002\\u56E0\\u6B64\\u4E2A\\u4EBA\\u6BD4\\u8F83\\u63A8\\u8350 BDD \\u7684\\u6D4B\\u8BD5\\u6A21\\u5F0F\\uFF0C\\u901A\\u8FC7\\u529F\\u80FD\\u548C\\u884C\\u4E3A\\u7684\\u63CF\\u8FF0\\uFF0C\\u5373\\u884C\\u4E3A/\\u6761\\u4EF6\\u2026\\u7ED3\\u679C\\u2026\\uFF0C\\u8FDB\\u884C\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u4F46\\u662F\\u5177\\u4F53\\u7684\\u6A21\\u5F0F\\u53EF\\u4EE5\\u6839\\u636E\\u5B9E\\u9645\\u5F00\\u53D1\\u5DE5\\u4F5C\\u8FDB\\u884C\\u9009\\u62E9\\u3002\"), mdx(\"p\", null, \"TDD \\u548C BDD \\u7684\\u6BD4\\u8F83\\u53EF\\u4EE5\\u53C2\\u8003: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://segmentfault.com/a/1190000018512127?utm_source=tag-newest\"\n  }, \"\\u5173\\u4E8E TDD \\u548C BDD\")), mdx(\"h3\", {\n    \"id\": \"编写-react-组件的单元测试\"\n  }, \"\\u7F16\\u5199 react \\u7EC4\\u4EF6\\u7684\\u5355\\u5143\\u6D4B\\u8BD5\"), mdx(\"p\", null, \"\\u5355\\u5143\\u6D4B\\u8BD5\\u5DE5\\u5177\\u91C7\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest\"), \", \\u5B98\\u65B9\\u4ECB\\u7ECD\\uFF0Cjest \\u662F\\u4E00\\u6B3E\\u5F00\\u7BB1\\u5373\\u7528\\u7684\\u6D4B\\u8BD5\\u6846\\u67B6\\uFF0C\\u76F8\\u6BD4\\u5176\\u5B83\\u7684\\u6D4B\\u8BD5\\u5DE5\\u5177\\uFF0C\\u66F4\\u7B80\\u6D01\\u660E\\u5FEB\\u3002\"), mdx(\"p\", null, \"\\u7EC4\\u4EF6\\u6D4B\\u8BD5\\u7684\\u6B65\\u9AA4\\u5927\\u81F4\\u5982\\u4E0B\\uFF1A\"), mdx(\"h4\", {\n    \"id\": \"1）测试组件的分支渲染\"\n  }, \"1\\uFF09\\u6D4B\\u8BD5\\u7EC4\\u4EF6\\u7684\\u5206\\u652F\\u6E32\\u67D3\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"describe(\\\"\\u6D4B\\u8BD5 CustomPicker\\u7EC4\\u4EF6\\\", () => {\\n  it(\\\"\\u9ED8\\u8BA4\\u72B6\\u6001\\u4E0B\\u53EA\\u6E32\\u67D3\\u6837\\u677F\\u4E0D\\u6E32\\u67D3\\u53D6\\u8272\\u677F\\\", () => {\\n    const wrapper = mount(<CustomPicker color={\\\"3b71fb\\\"} />)\\n\\n    expect(wrapper.exists(\\\".swatch-wrapper\\\")).toBe(true)\\n    expect(wrapper.exists(\\\"popover-wrapper\\\")).toBe(false)\\n  })\\n  it(\\\"\\u70B9\\u51FB\\u6837\\u677F\\u540E\\u53D6\\u8272\\u677F\\u6210\\u529F\\u6E32\\u67D3\\\", () => {\\n    const wrapper = mount(<CustomPicker color={\\\"3b71fb\\\"} />)\\n\\n    wrapper.find(\\\".swatch-wrapper\\\").simulate(\\\"click\\\")\\n    expect(wrapper.exists(\\\"popover-wrapper\\\")).toBe(true)\\n  })\\n})\\n\")), mdx(\"p\", null, \"describe \\u4F1A\\u5F62\\u6210\\u4E00\\u4E2A\\u4F5C\\u7528\\u57DF\\uFF0C\\u5BF9\\u4E8E\\u5176\\u5305\\u542B\\u7684\\u6D4B\\u8BD5\\u9700\\u5168\\u90E8\\u6267\\u884C\\u6210\\u529F\\uFF0C\\u624D\\u7B97\\u6D4B\\u8BD5\\u6210\\u529F\\u3002\"), mdx(\"p\", null, \"\\u6BCF\\u4E00\\u4E2A it \\u5F62\\u6210\\u4E00\\u4E2A\\u5355\\u72EC\\u7684\\u6D4B\\u8BD5\\u4F5C\\u7528\\u57DF\\uFF0C\\u7B2C\\u4E00\\u4E2A\\u53C2\\u6570\\u4E3A\\u8FD9\\u4E2A\\u6D4B\\u8BD5\\u7684\\u65AD\\u8A00\\uFF0C\\u7B2C\\u4E8C\\u4E2A\\u56DE\\u8C03\\u51FD\\u6570\\u4E2D\\u7F16\\u5199\\u5177\\u4F53\\u7684\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u6D4B\\u8BD5 react \\u7EC4\\u4EF6\\u9700\\u8981\\u7528\\u5230 enzyme \\u7684 mount(\\u5168\\u6E32\\u67D3)/shallow(\\u6D45\\u6E32\\u67D3)/render(\\u9759\\u6001\\u6E32\\u67D3)\\u65B9\\u6CD5\\uFF0C\\u6765\\u6E32\\u67D3\\u7EC4\\u4EF6\\uFF0C\\u83B7\\u53D6\\u7EC4\\u4EF6\\u7684 dom \\u7ED3\\u6784\\u3002\"), mdx(\"p\", null, \"\\u83B7\\u53D6\\u5230\\u7EC4\\u4EF6\\u7684 dom \\u7ED3\\u6784\\u4E4B\\u540E\\uFF0C\\u5C31\\u53EF\\u4EE5\\u5BF9\\u7EC4\\u4EF6\\u7684\\u6E32\\u67D3\\u8FDB\\u884C\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u4F7F\\u7528 simulate \\u53EF\\u4EE5\\u6A21\\u62DF\\u4EA4\\u4E92\\u4E8B\\u4EF6\\u7684\\u89E6\\u53D1\\u3002\"), mdx(\"p\", null, \"\\u5728\\u4EA4\\u4E92\\u4E8B\\u4EF6\\u6216\\u8005\\u7EC4\\u4EF6\\u751F\\u547D\\u5468\\u671F\\u8C03\\u7528\\u4E4B\\u540E\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528 expect \\u8BED\\u53E5\\u6D4B\\u8BD5\\u662F\\u5426\\u7ED3\\u679C\\u8FBE\\u5230\\u9884\\u671F\\u3002\"), mdx(\"p\", null, \"expect \\u4EE3\\u8868\\u671F\\u671B\\uFF0C\\u7528\\u4E8E\\u63CF\\u8FF0\\u6D4B\\u8BD5\\u7684\\u671F\\u671B\\u7ED3\\u679C\\u3002\\u6BD4\\u5982\\u4E00\\u4E2A\\u7B80\\u5355\\u7684 1+1 \\u7B49\\u4E8E 2 \\u7684\\u6D4B\\u8BD5\\uFF0C\\u53EF\\u4EE5\\u5199\\u4E3A expect(1+1).toBe(2)\\uFF0C\\u8FD9\\u4EE3\\u8868\\u4E86\\u4E00\\u4E2A\\u6210\\u529F\\u7684\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u4E0A\\u9762\\u56FE\\u7247\\u4E2D\\u7684\\u6D4B\\u8BD5\\uFF0C\\u90FD\\u662F\\u5728\\u6D4B\\u4E0D\\u540C\\u60C5\\u51B5\\u4E0B\\uFF0C\\u7EC4\\u4EF6\\u7684\\u6E32\\u67D3\\u3002\"), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u7EC4\\u4EF6\\u7684\\u6E32\\u67D3\\uFF0C\\u5E38\\u7528\\u5230\\u7684\\u6D4B\\u8BD5\\u7684\\u65B9\\u6CD5\\u6709\\uFF1A\"), mdx(\"p\", null, \".exists(selector)\\u5224\\u65AD\\u662F\\u5426\\u5B58\\u5728\\n.find(selector) \\u83B7\\u53D6 dom \\u8282\\u70B9\\n.at(number) \\u83B7\\u53D6\\u6307\\u5B9A\\u7D22\\u5F15\\u7684 dom \\u8282\\u70B9\\n.filter(selector) \\u6839\\u636E\\u9009\\u62E9\\u5668\\u8FC7\\u6EE4 dom \\u8282\\u70B9\\n.filterWhere(fn) \\u6839\\u636E\\u51FD\\u6570\\u8FD4\\u56DE\\u503C\\u8FC7\\u6EE4 dom \\u8282\\u70B9\\n.text() \\u83B7\\u53D6 dom \\u8282\\u70B9\\u7684\\u6587\\u5B57\\u5185\\u5BB9\\n.props() \\u83B7\\u53D6 dom \\u8282\\u70B9\\u7684\\u5C5E\\u6027\\u3002\\n.hasClass(className) \\u5224\\u65AD\\u662F\\u5426\\u5305\\u542B\\u8FD9\\u4E2A\\u7C7B\\uFF0C\\u8FD4\\u56DE true \\u6216\\u8005 false\\n.contains(node) \\u786E\\u5B9A\\u662F\\u5426\\u5305\\u542B\\u8BE5\\u8282\\u70B9\\u6216\\u8005\\u4E00\\u4E9B\\u8282\\u70B9 \\uFF0C\\u8FD4\\u56DE true \\u6216\\u8005 false\\n\\u5E38\\u7528\\u7684 jest \\u5339\\u914D\\u5668\\uFF1A\"), mdx(\"p\", null, \".toBe() \\u6D45\\u6BD4\\u8F83\\u662F\\u5426\\u76F8\\u7B49\\n.toEqual() \\u53EF\\u4EE5\\u5BF9\\u9700\\u8981\\u6DF1\\u6BD4\\u8F83\\u7684\\u5BF9\\u8C61\\u8FDB\\u884C\\u5339\\u914D\\n.not \\u6D4B\\u8BD5\\u76F8\\u53CD\\u7684\\u7528\\u4F8B\\n.toBeGreaterThan() \\u5927\\u4E8E\\n.toBeLessThan() \\u5C0F\\u4E8E\\n.toMatch() \\u5339\\u914D\\u6B63\\u5219\\u8868\\u8FBE\\u5F0F\\n.toHaveLength(number) \\u5339\\u914D\\u6570\\u7EC4\\u3001\\u5B57\\u7B26\\u4E32\\u957F\\u5EA6\"), mdx(\"p\", null, \"\\u6253\\u5370\\u8282\\u70B9\\u7684 dom \\u7ED3\\u6784\\u53EF\\u4EE5\\u4F7F\\u7528\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"console.log(wrapper.find(selector).debug())\\n\")), mdx(\"p\", null, \"\\u66F4\\u591A\\u7684 enzyme \\u7684 api \\u53EF\\u4EE5\\u53C2\\u8003\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://enzymejs.github.io/enzyme/docs/api/\"\n  }, \"https://enzymejs.github.io/enzyme/docs/api/\")), mdx(\"h4\", {\n    \"id\": \"2）测试父组件传递的方法是否被正确调用\"\n  }, \"2\\uFF09\\u6D4B\\u8BD5\\u7236\\u7EC4\\u4EF6\\u4F20\\u9012\\u7684\\u65B9\\u6CD5\\u662F\\u5426\\u88AB\\u6B63\\u786E\\u8C03\\u7528\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"it(\\\"\\u5F53\\u6539\\u53D8\\u8F93\\u5165\\u6846\\u8F93\\u5165\\u65F6\\uFF0C\\u7236\\u7EC4\\u4EF6\\u4F20\\u9012\\u7684changeName\\u65B9\\u6CD5\\u88AB\\u6B63\\u786E\\u7684\\u53C2\\u6570\\u503C\\u8C03\\u7528\\\", () => {\\n  const changeName = jest.fn()\\n  const wrapper = mount(<Search changeName={changeName} />)\\n\\n  wrapper.find(\\\"input.name\\\").simulate(\\\"change\\\", {\\n    target: {\\n      value: \\\"kuzure\\\",\\n    },\\n  })\\n\\n  expect(changeName).toHaveBeenCalledWith(\\\"kuzure\\\")\\n})\\n\")), mdx(\"p\", null, \"\\u5BF9\\u4E8E\\u7236\\u7EC4\\u4EF6\\u4F20\\u9012\\u7684\\u51FD\\u6570\\u65B9\\u6CD5\\uFF0C\\u9700\\u8981\\u6D4B\\u8BD5\\u662F\\u5426\\u88AB\\u6B63\\u786E\\u7684\\u53C2\\u6570\\u8C03\\u7528\\u3002\"), mdx(\"p\", null, \"\\u6D4B\\u8BD5\\u51FD\\u6570\\u8C03\\u7528\\u4E4B\\u524D\\uFF0C\\u9700\\u8981\\u5C06\\u6D4B\\u8BD5\\u7684\\u51FD\\u6570\\u8FDB\\u884C Mock\\uFF0C\\u624D\\u53EF\\u4EE5\\u88AB\\u6D4B\\u8BD5\\u662F\\u5426\\u88AB\\u8C03\\u7528\\u3002\"), mdx(\"p\", null, \"mock \\u51FD\\u6570\\u53EF\\u4EE5\\u6355\\u6349\\u51FD\\u6570\\u7684\\u8C03\\u7528\\u60C5\\u51B5\\uFF0C\\u8BBE\\u7F6E\\u51FD\\u6570\\u7684\\u5185\\u90E8\\u5B9E\\u73B0\\u548C\\u8FD4\\u56DE\\u503C\\u3002\"), mdx(\"p\", null, \"Mock \\u51FD\\u6570\\u7684\\u65B9\\u6CD5\\u4E3B\\u8981\\u6709\"), mdx(\"p\", null, \"jest.fn() \\u7B80\\u5355\\u7684\\u8FD4\\u56DE\\u4E00\\u4E2A mock \\u51FD\\u6570\\uFF0C\\u88AB\\u8C03\\u7528\\u540E\\u5E76\\u4E0D\\u4F1A\\u6267\\u884C\\njest.spyOn() \\u4E0D\\u4EC5\\u53EF\\u4EE5\\u6355\\u83B7\\u51FD\\u6570\\u7684\\u8C03\\u7528\\u60C5\\u51B5\\uFF0C\\u88AB\\u8C03\\u7528\\u540E\\u8FD8\\u4F1A\\u6267\\u884C\\njest.mock() \\u53EF\\u4EE5 mock \\u6574\\u4E2A\\u6A21\\u5757\\n\\u6D4B\\u8BD5\\u51FD\\u6570\\u8C03\\u7528\\u7684\\u65B9\\u6CD5\\u6709\"), mdx(\"p\", null, \"toHaveBeenCalledWith(params) \\u88AB\\u6307\\u5B9A\\u7684\\u53C2\\u6570\\u8C03\\u7528\\ntoHaveBeenCalled() \\u88AB\\u8C03\\u7528\\nnot.toHaveBeenCalled() \\u6CA1\\u6709\\u88AB\\u8C03\\u7528\\ntoHaveBeenCalledTimes(number) \\u88AB\\u8C03\\u7528\\u7684\\u6B21\\u6570\"), mdx(\"h3\", {\n    \"id\": \"运行单元测试，查看覆盖率\"\n  }, \"\\u8FD0\\u884C\\u5355\\u5143\\u6D4B\\u8BD5\\uFF0C\\u67E5\\u770B\\u8986\\u76D6\\u7387\"), mdx(\"p\", null, \"\\u5728\\u7EC8\\u7AEF\\u8F93\\u5165 npm run jest \\u2014coverage\\uFF0C\\u56DE\\u8F66\\u5373\\u53EF\\u8FD0\\u884C\\u5355\\u5143\\u6D4B\\u8BD5\\u5E76\\u67E5\\u770B\\u8986\\u76D6\\u7387\"), mdx(\"p\", null, \"\\u6253\\u5F00.tmp/coverage/lcov-report/index.html \\u53EF\\u4EE5\\u67E5\\u770B\\u5177\\u4F53\\u7684\\u6D4B\\u8BD5\\u62A5\\u544A\\nStatements \\u4EE3\\u8868\\u58F0\\u660E\\u8986\\u76D6\\u7387\\uFF0CBranches \\u4EE3\\u8868\\u5206\\u652F\\u8986\\u76D6\\u7387\\uFF0CFunctions \\u4EE3\\u8868\\u51FD\\u6570\\u8986\\u76D6\\u7387\\uFF0CLines \\u4EE3\\u8868\\u4EE3\\u7801\\u884C\\u8986\\u76D6\\u7387\\u3002\"), mdx(\"h3\", {\n    \"id\": \"一些踩坑经验\"\n  }, \"\\u4E00\\u4E9B\\u8E29\\u5751\\u7ECF\\u9A8C\"), mdx(\"h4\", {\n    \"id\": \"当组件生命周期或交互事件触发了异步请求\"\n  }, \"\\u5F53\\u7EC4\\u4EF6\\u751F\\u547D\\u5468\\u671F\\u6216\\u4EA4\\u4E92\\u4E8B\\u4EF6\\u89E6\\u53D1\\u4E86\\u5F02\\u6B65\\u8BF7\\u6C42\"), mdx(\"p\", null, \"jest \\u4E0D\\u4F1A\\u771F\\u6B63\\u6267\\u884C\\u5F02\\u6B65\\u8BF7\\u6C42\\uFF0C\\u800C\\u662F\\u76F4\\u63A5\\u8DF3\\u8FC7\\u5F02\\u6B65\\u8BED\\u53E5\\u3002\\u8BF7\\u5C06\\u4E0B\\u9762\\u7684\\u4EE3\\u7801\\u7C98\\u8D34\\u5230\\u9879\\u76EE\\u4E2D\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"title='act-wait-helper.js'\",\n    \"title\": \"'act-wait-helper.js'\"\n  }, \"import { act } from 'react-dom/test-utils';\\n\\nexport function wait(amount = 0) {\\n  return new Promise(resolve => setTimeout(resolve, amount));\\n}\\n\\nexport async function actWait(amount = 0) {\\n  await act(async () => {\\n    await wait(amount);\\n  })\\n}\\n\\nexport async function updateWrapper(wrapper, amount = 0) {\\n  await act(async () => {\\n    await wait(amount);\\n    wrapper.update();\\n  })\\n}\\n\")), mdx(\"p\", null, \"\\u5F53\\u6D4B\\u8BD5\\u8FC7\\u7A0B\\u89E6\\u53D1\\u4E86\\u5F02\\u6B65\\u64CD\\u4F5C\\uFF0C\\u5219\\u9700\\u8981\\u5728\\u89E6\\u53D1\\u4E4B\\u540E\\u52A0\\u4E0A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"await updateWrapper(wrapper);\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u51FA\\u73B0 thrown: undefined \\u7684\\u62A5\\u9519\\uFF0C\\u5219\\u53EF\\u80FD\\u662F\\u6D4B\\u8BD5\\u8FC7\\u7A0B\\u6709\\u89E6\\u53D1\\u4E86\\u7684\\u5F02\\u6B65\\u8BF7\\u6C42\\u6CA1\\u6709mock\\uFF0C\\u6216\\u8005\\u6CA1\\u6709mock\\u8FD4\\u56DE\\u503C\\u3002\"), mdx(\"p\", null, \"\\u4E00\\u4E2A\\u7B80\\u5355\\u7684\\u5F02\\u6B65\\u8BF7\\u6C42\\u7684mock\\u53EF\\u4EE5\\u5199\\u4F5C\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"api.getData = jest.fn().mockResolvedValue({ success: 1 });\\n\")), mdx(\"h4\", {\n    \"id\": \"如何获取到组件的实例\"\n  }, \"\\u5982\\u4F55\\u83B7\\u53D6\\u5230\\u7EC4\\u4EF6\\u7684\\u5B9E\\u4F8B\"), mdx(\"p\", null, \"\\u6709\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u60F3\\u6D4B\\u8BD5\\u7EC4\\u4EF6\\u4E2D\\u7684\\u65B9\\u6CD5\\u7684\\u8C03\\u7528\\u60C5\\u51B5\\u662F\\u5426\\u6B63\\u786E\\u3001mock\\u5176\\u8FD4\\u56DE\\uFF0C\\u8FD9\\u65F6\\u6211\\u4EEC\\u5C31\\u9700\\u8981\\u83B7\\u53D6\\u5230\\u7EC4\\u4EF6\\u7684\\u5B9E\\u4F8B\\u3002\"), mdx(\"p\", null, \"\\u9700\\u8981\\u6CE8\\u610F\\u7684\\u662F\\uFF0C\\u5982\\u679C\\u7EC4\\u4EF6\\u91C7\\u7528\\u4E86hook\\u7684\\u65B9\\u5F0F\\u7F16\\u5199\\uFF0C\\u90A3\\u4E48\\u662F\\u65E0\\u6CD5\\u83B7\\u53D6\\u5230\\u7EC4\\u4EF6\\u7684\\u5B9E\\u4F8B\\u7684\\uFF0C\\u4E5F\\u5C31\\u62FF\\u4E0D\\u5230\\u7EC4\\u4EF6\\u4E2D\\u7684\\u65B9\\u6CD5\\u3002\"), mdx(\"p\", null, \"\\u6240\\u4EE5\\uFF0C\\u5982\\u679C\\u6211\\u4EEC\\u60F3\\u8981\\u83B7\\u53D6\\u7EC4\\u4EF6\\u7684\\u5B9E\\u4F8B\\uFF0C\\u5FC5\\u987B\\u4FDD\\u8BC1\\u88AB\\u6D4B\\u7EC4\\u4EF6\\u662Fclass\\u7EC4\\u4EF6\\u3002\"), mdx(\"p\", null, \"\\u666E\\u901A\\u7684class\\u7EC4\\u4EF6\\uFF0C\\u83B7\\u53D6\\u5B9E\\u4F8B\\u7684\\u65B9\\u6CD5\\u4E3A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"wrapper.instance();\\n\")), mdx(\"p\", null, \"\\u8FDE\\u63A5\\u4E86redux\\u7684\\u7EC4\\u4EF6\\u5B9E\\u4F8B\\u83B7\\u53D6\"), mdx(\"p\", null, \"redux\\u5B98\\u65B9\\u5EFA\\u8BAE\\uFF0C\\u6D4B\\u8BD5\\u8FDE\\u63A5redux\\u7684\\u7EC4\\u4EF6\\u65F6\\uFF0C\\u5355\\u72EC\\u5C06\\u7EC4\\u4EF6\\u5BFC\\u51FA\\u4E00\\u6B21\\uFF0C\\u4ECE\\u800C\\u907F\\u514D\\u6D4B\\u8BD5\\u88ABconnect\\u5305\\u88F9\\u7684\\u9AD8\\u9636\\u7EC4\\u4EF6\\u3002\"), mdx(\"p\", null, \"\\u88ABantd\\u7684Form\\u5305\\u88F9\\u7684\\u9AD8\\u9636\\u7EC4\\u4EF6\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let form;\\nconst wrapper = mountWithIntl(<Component wrappedComponentRef={node => (form= node)} />);\\n\")), mdx(\"p\", null, \"form\\u5C31\\u662F\\u7EC4\\u4EF6\\u7684\\u5B9E\\u4F8B\"), mdx(\"h4\", {\n    \"id\": \"当我们通过实例手动更新了组件的state\"\n  }, \"\\u5F53\\u6211\\u4EEC\\u901A\\u8FC7\\u5B9E\\u4F8B\\u624B\\u52A8\\u66F4\\u65B0\\u4E86\\u7EC4\\u4EF6\\u7684state\"), mdx(\"p\", null, \"\\u5982\\u679C\\u901A\\u8FC7setState()\\u66F4\\u65B0\\u4E86state, \\u5219\\u9700\\u8981\\u5728\\u540E\\u9762\\u52A0\\u4E0A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"wrapper.update();\\n\")), mdx(\"p\", null, \"\\u8FD9\\u6837state\\u624D\\u4F1A\\u66F4\\u65B0\\u5230\\u7EC4\\u4EF6\\u7684dom\\u7ED3\\u6784\\u4E2D\\u3002\"), mdx(\"h4\", {\n    \"id\": \"组件中使用了localstorage存储数据\"\n  }, \"\\u7EC4\\u4EF6\\u4E2D\\u4F7F\\u7528\\u4E86localstorage\\u5B58\\u50A8\\u6570\\u636E\"), mdx(\"p\", null, \"\\u88AB\\u6D4B\\u7EC4\\u4EF6\\u4E2D\\u5982\\u679C\\u4F7F\\u7528\\u4E86store.set\\u3001store.get\\u65B9\\u6CD5\\uFF0C\\u9700\\u8981\\u4F7F\\u7528mock\\uFF0C\\u5426\\u5219jest\\u4F1A\\u62A5\\u9519\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728beforeEach\\u94A9\\u5B50\\u51FD\\u6570\\u4E2Dmock\\u4E0A\\u8FF0\\u65B9\\u6CD5\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"beforeEach(() => {\\n  const storage = { username: 'kuzure' };\\n\\n  store.get = jest.fn().mockImplementation(key => {\\n    return storage[key];\\n  });\\n  store.set = jest.fn().mockImplementation((key, value) => {\\n    return (Storage[key] = `${value}`);\\n  });\\n})\\n\")), mdx(\"p\", null, \"beforeEach\\u4F1A\\u5728\\u6BCF\\u4E00\\u6761\\u6D4B\\u8BD5\\u6267\\u884C\\u4E4B\\u524D\\u6267\\u884C\\uFF0C\\u5F53beforeEach\\u5199\\u5728describe\\u5185\\u65F6\\uFF0C\\u53EA\\u9002\\u7528\\u4E8Edescribe\\u5757\\u5185\\u7684\\u6D4B\\u8BD5\\u3002\"), mdx(\"p\", null, \"\\u901A\\u8FC7mockImplementation()\\u6765mock store\\u7684\\u5177\\u4F53\\u5B9E\\u73B0\"), mdx(\"h4\", {\n    \"id\": \"子组件连接了redux\"\n  }, \"\\u5B50\\u7EC4\\u4EF6\\u8FDE\\u63A5\\u4E86redux\"), mdx(\"p\", null, \"\\u5982\\u679C\\u5B50\\u7EC4\\u4EF6\\u8FDE\\u63A5\\u4E86redux\\uFF0C\\u5219\\u5728\\u6E32\\u67D3\\u7EC4\\u4EF6\\u65F6jest\\u4F1A\\u62A5\\u9519\\uFF0C\\u8FD9\\u65F6\\u6211\\u4EEC\\u9700\\u8981\\u5C06\\u5B50\\u7EC4\\u4EF6\\u6574\\u4E2Amock\\u6389\"), mdx(\"p\", null, \"\\u5728\\u6D4B\\u8BD5\\u6587\\u4EF6\\u4E0A\\u65B9\\u8FD9\\u4E48\\u5199\\uFF08\\u5FC5\\u987B\\u5728describe\\u4E4B\\u5916)\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"jest.mock('../../ChildComponent'); // \\u5F15\\u53F7\\u4E2D\\u4E3A\\u5B50\\u7EC4\\u4EF6\\u7684\\u76F8\\u5BF9\\u8DEF\\u5F84\\n\")), mdx(\"h4\", {\n    \"id\": \"测试saga\"\n  }, \"\\u6D4B\\u8BD5saga\"), mdx(\"p\", null, \"\\u5BF9\\u4E8Esaga\\u51FD\\u6570\\uFF0C\\u6211\\u4EEC\\u4E3B\\u8981\\u6D4B\\u8BD5\\u662F\\u5426\\u8C03\\u7528\\u4E86\\u6B63\\u786E\\u7684api\\u3001\\u662F\\u5426\\u53D1\\u9001\\u4E86\\u6B63\\u786E\\u7684action\\u3002\"), mdx(\"p\", null, \"\\u4F7F\\u7528redux-saga-test-plan\\u7B2C\\u4E09\\u65B9\\u63D2\\u4EF6\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728\\u6D4B\\u8BD5\\u6587\\u4EF6\\u4E2D\\u8FD9\\u4E48\\u5199:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { testSaga } from 'redux-saga-test-plan';\\nimport { fetchData } from '../entity';\\n\\nit('\\u5F53\\u63A5\\u53E3\\u6B63\\u5E38\\u8FD4\\u56DE\\u6570\\u636E\\uFF0C\\u53D1\\u9001\\u6B63\\u786E\\u7684action', () => {\\n  api.get = jest.fn().mockResolvedValue({ data: 1 });\\n\\n  testSaga(fetchData)\\n    .next()\\n    .call(api.get, 'api/v1/data')\\n\\n    .next({ data: 1 })\\n    .put({\\n      type: FETCH_DATA,\\n      value: 1\\n    })\\n    .next()\\n    .isDone();\\n})\\n\")), mdx(\"p\", null, \".next(params)\\u8868\\u793A\\u6267\\u884C\\u5230\\u4E0B\\u4E00\\u6B65\\u7684yield\\u8BED\\u53E5\\uFF0C\\u53C2\\u6570\\u8868\\u793A\\u4E0A\\u4E00\\u6B65yield\\u8BED\\u53E5\\u7684\\u8FD4\\u56DE\\u503C\"), mdx(\"p\", null, \".call(fn)\\u8868\\u793A\\u65AD\\u8A00\\u51FD\\u6570\\u88AB\\u8C03\\u7528\"), mdx(\"p\", null, \".put(action)\\u8868\\u793A\\u65AD\\u8A00\\u53D1\\u9001\\u4E86\\u6307\\u5B9A\\u7684action\"), mdx(\"p\", null, \".isDone() \\u8868\\u793A\\u65AD\\u8A00saga\\u51FD\\u6570\\u5DF2\\u7ECF\\u7ED3\\u675F\"), mdx(\"p\", null, \"\\u66F4\\u591A\\u53C2\\u8003\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jfairbank/redux-saga-test-plan#unit-testing\"\n  }, \"https://github.com/jfairbank/redux-saga-test-plan#unit-testing\")), mdx(\"h4\", {\n    \"id\": \"测试reducer\"\n  }, \"\\u6D4B\\u8BD5reducer\"), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u90E8\\u5206\\u4E3B\\u8981\\u6D4B\\u8BD5\\u662F\\u5426\\u6B63\\u786E\\u5B8C\\u6210\\u8BA1\\u7B97\\uFF0C\\u8F93\\u5165\\u8F93\\u51FA\\u5341\\u5206\\u660E\\u786E\\uFF0C\\u975E\\u5E38\\u9002\\u5408\\u505A\\u5355\\u5143\\u6D4B\\u8BD5\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"it ('panel is pushed to panels state', () => {\\n  const state = fromJS({\\n    panels: ['jest']\\n  });\\n\\n  const expected = {\\n    panels: ['jest', 'enzyme']\\n  };\\n\\n  const result = dashboard(state, addPanel('enzyme'));\\n\\n  expect(result.toJS()).toEqual(expected);\\n})\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/unit-test/","title":"jest单元测试、TDD、BDD","tags":["前端","单元测试"],"date":"June 24, 2021","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ff27fa1b94a0eca79482e60faeb433aa/76382/image.jpg","srcSet":"/static/ff27fa1b94a0eca79482e60faeb433aa/acfe9/image.jpg 345w,\n/static/ff27fa1b94a0eca79482e60faeb433aa/ac5b1/image.jpg 690w,\n/static/ff27fa1b94a0eca79482e60faeb433aa/76382/image.jpg 1380w","sizes":"(min-width: 1380px) 1380px, 100vw"},"sources":[{"srcSet":"/static/ff27fa1b94a0eca79482e60faeb433aa/57336/image.webp 345w,\n/static/ff27fa1b94a0eca79482e60faeb433aa/9f215/image.webp 690w,\n/static/ff27fa1b94a0eca79482e60faeb433aa/5b434/image.webp 1380w","type":"image/webp","sizes":"(min-width: 1380px) 1380px, 100vw"}]},"width":1380,"height":1102}}},"imageAlt":"Laptop on a desk with VS Code open.","imageCaptionText":null,"imageCaptionLink":null,"socialImage":null},"previous":{"id":"37896289-7b05-5ebc-bef5-fcf28bfc5b8c","excerpt":"这里是Hill的博客。 本人爱好看书、画画、看电影...也说不上是爱好，就觉得比较有趣。 小时候的梦想是成为一个艺术家，喜欢鼓捣手工。 大学阴差阳错学了计算机，从此代码伴我走天下，键盘在手，bug…","slug":"/about/","title":"关于这里","date":"June 23, 2021"},"next":{"id":"5fe50cb3-6160-5259-8e0f-bde13f4ba63b","excerpt":"最近做 qiankun 框架微前端集成的时候，遇到了主应用和子应用样式名冲突导致样式异常的问题。\n对此，qiankun 虽然给出了沙箱隔离的方案，但是这个方案对于 react 框架似乎并不怎么友好，\n而一个一个地给子应用的样式添加前缀又太繁琐，\n所以就想是否可以开发一个 cli…","slug":"/classname-prefix-cli/","title":"开发一个cli工具一键给css样式名添加前缀","date":"July 09, 2021"}},"pageContext":{"id":"5a40241e-293c-59ee-80ab-17a28f628879","previousId":"37896289-7b05-5ebc-bef5-fcf28bfc5b8c","nextId":"5fe50cb3-6160-5259-8e0f-bde13f4ba63b","maxWidth":1380}},
    "staticQueryHashes": ["2744905544","3090755652","764694655"]}